<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/Users/nyuszi/_Development/_Keycloak/_Showcase/_roboto/cottontail/vendor/barryvdh/laravel-ide-helper/resources/views" file="helper.php" realpath="/Users/nyuszi/_Development/_Keycloak/_Showcase/_roboto/cottontail/vendor/barryvdh/laravel-ide-helper/resources/views/helper.php" size="4779" time="2021-04-09T06:17:55+00:00" unixtime="1617949075" sha1="8314e79425e321cee201b93585afb6b7391a9b39" relative="vendor/barryvdh/laravel-ide-helper/resources/views/helper.php"/>
  <line no="1">
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;?php'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="2">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="3">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT"> * @var \Barryvdh\LaravelIdeHelper\Alias[][] $namespaces_by_alias_ns</token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT"> * @var \Barryvdh\LaravelIdeHelper\Alias[][] $namespaces_by_extends_ns</token>
  </line>
  <line no="6">
    <token name="T_DOC_COMMENT"> * @var bool $include_fluent</token>
  </line>
  <line no="7">
    <token name="T_DOC_COMMENT"> * @var string $helpers</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="9">
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="10"/>
  <line no="11">
    <token name="T_INLINE_HTML">// @formatter:off</token>
  </line>
  <line no="12"/>
  <line no="13">
    <token name="T_INLINE_HTML">/**</token>
  </line>
  <line no="14">
    <token name="T_INLINE_HTML"> * A helper file for Laravel, to provide autocomplete information to your IDE</token>
  </line>
  <line no="15">
    <token name="T_INLINE_HTML"> * Generated for Laravel </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$version</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML">.</token>
  </line>
  <line no="16">
    <token name="T_INLINE_HTML"> *</token>
  </line>
  <line no="17">
    <token name="T_INLINE_HTML"> * This file should not be included in your code, only analyzed by your IDE!</token>
  </line>
  <line no="18">
    <token name="T_INLINE_HTML"> *</token>
  </line>
  <line no="19">
    <token name="T_INLINE_HTML"> * @author Barry vd. Heuvel &lt;barryvdh@gmail.com&gt;</token>
  </line>
  <line no="20">
    <token name="T_INLINE_HTML"> * @see https://github.com/barryvdh/laravel-ide-helper</token>
  </line>
  <line no="21">
    <token name="T_INLINE_HTML"> */</token>
  </line>
  <line no="22"/>
  <line no="23">
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$namespaces_by_extends_ns</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$aliases</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="24">
    <token name="T_INLINE_HTML">    </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\Illuminate\Database\Eloquent'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="25">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="26">
    <token name="T_WHITESPACE">    </token>
    <token name="T_ENDIF">endif</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="27">
    <token name="T_INLINE_HTML">namespace </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'__root'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">trim</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$namespace</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\\'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> { </token>
  </line>
  <line no="28">
    <token name="T_INLINE_HTML">    </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$aliases</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$alias</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="29">
    <token name="T_INLINE_HTML">        </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">trim</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$alias</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getDocComment</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'    '</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> </token>
  </line>
  <line no="30">
    <token name="T_INLINE_HTML">        </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$alias</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getClassType</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$alias</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getExtendsClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> {</token>
  </line>
  <line no="31">
    <token name="T_INLINE_HTML">        </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$alias</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getMethods</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="32">
    <token name="T_INLINE_HTML">            </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">trim</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getDocComment</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'        '</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> </token>
  </line>
  <line no="33">
    <token name="T_INLINE_HTML">        public static function </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML">(</token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getParamsWithDefault</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML">)</token>
  </line>
  <line no="34">
    <token name="T_INLINE_HTML">        {</token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getDeclaringClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getRoot</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="35">
    <token name="T_INLINE_HTML">            //Method inherited from </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getDeclaringClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="36">
    <token name="T_INLINE_HTML">         </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ENDIF">endif</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="37"/>
  <line no="38">
    <token name="T_INLINE_HTML">            </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isInstanceCall</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="39">
    <token name="T_INLINE_HTML">            /** @var </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getRoot</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> $instance */</token>
  </line>
  <line no="40">
    <token name="T_INLINE_HTML">            </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ENDIF">endif</token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="41">
    <token name="T_INLINE_HTML">            </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">shouldReturn</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'return '</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getRootMethodCall</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML">;</token>
  </line>
  <line no="42">
    <token name="T_INLINE_HTML">        }</token>
  </line>
  <line no="43">
    <token name="T_INLINE_HTML">        </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ENDFOREACH">endforeach</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> </token>
  </line>
  <line no="44">
    <token name="T_INLINE_HTML">    }</token>
  </line>
  <line no="45">
    <token name="T_INLINE_HTML">    </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ENDFOREACH">endforeach</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> </token>
  </line>
  <line no="46">
    <token name="T_INLINE_HTML">}</token>
  </line>
  <line no="47"/>
  <line no="48">
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ENDFOREACH">endforeach</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="49"/>
  <line no="50">
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$namespaces_by_alias_ns</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$aliases</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="51">
    <token name="T_INLINE_HTML">namespace </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'__root'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">trim</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$namespace</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\\'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> { </token>
  </line>
  <line no="52">
    <token name="T_INLINE_HTML">    </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$aliases</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$alias</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="53">
    <token name="T_INLINE_HTML">        </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$alias</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getClassType</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$alias</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getShortName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> extends </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$alias</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getExtends</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> {</token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$alias</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getExtendsNamespace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\Illuminate\Database\Eloquent'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="54">
    <token name="T_INLINE_HTML">            </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$alias</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getMethods</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> </token>
  </line>
  <line no="55">
    <token name="T_INLINE_HTML">                </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">trim</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getDocComment</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'            '</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> </token>
  </line>
  <line no="56">
    <token name="T_INLINE_HTML">            public static function </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML">(</token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getParamsWithDefault</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML">)</token>
  </line>
  <line no="57">
    <token name="T_INLINE_HTML">            {</token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getDeclaringClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getRoot</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="58">
    <token name="T_INLINE_HTML">                //Method inherited from </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getDeclaringClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="59">
    <token name="T_INLINE_HTML">             </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ENDIF">endif</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="60"/>
  <line no="61">
    <token name="T_INLINE_HTML">                </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isInstanceCall</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="62">
    <token name="T_INLINE_HTML">                /** @var </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getRoot</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> $instance */</token>
  </line>
  <line no="63">
    <token name="T_INLINE_HTML">                </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ENDIF">endif</token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="64">
    <token name="T_INLINE_HTML">                </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">shouldReturn</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'return '</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$method</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getRootMethodCall</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML">;</token>
  </line>
  <line no="65">
    <token name="T_INLINE_HTML">            }</token>
  </line>
  <line no="66">
    <token name="T_INLINE_HTML">            </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ENDFOREACH">endforeach</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="67">
    <token name="T_INLINE_HTML">        </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ENDIF">endif</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML">}</token>
  </line>
  <line no="68">
    <token name="T_INLINE_HTML">    </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ENDFOREACH">endforeach</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> </token>
  </line>
  <line no="69">
    <token name="T_INLINE_HTML">}</token>
  </line>
  <line no="70"/>
  <line no="71">
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ENDFOREACH">endforeach</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="72"/>
  <line no="73">
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$helpers</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="74">
    <token name="T_INLINE_HTML">namespace {</token>
  </line>
  <line no="75">
    <token name="T_INLINE_HTML">    </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$helpers</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> </token>
  </line>
  <line no="76">
    <token name="T_INLINE_HTML">}</token>
  </line>
  <line no="77">
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ENDIF">endif</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="78"/>
  <line no="79">
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$include_fluent</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="80">
    <token name="T_INLINE_HTML">namespace Illuminate\Support {</token>
  </line>
  <line no="81">
    <token name="T_INLINE_HTML">    /**</token>
  </line>
  <line no="82">
    <token name="T_INLINE_HTML">     * Methods commonly used in migrations</token>
  </line>
  <line no="83">
    <token name="T_INLINE_HTML">     *</token>
  </line>
  <line no="84">
    <token name="T_INLINE_HTML">     * @method Fluent after(string $column) Add the after modifier</token>
  </line>
  <line no="85">
    <token name="T_INLINE_HTML">     * @method Fluent charset(string $charset) Add the character set modifier</token>
  </line>
  <line no="86">
    <token name="T_INLINE_HTML">     * @method Fluent collation(string $collation) Add the collation modifier</token>
  </line>
  <line no="87">
    <token name="T_INLINE_HTML">     * @method Fluent comment(string $comment) Add comment</token>
  </line>
  <line no="88">
    <token name="T_INLINE_HTML">     * @method Fluent default($value) Add the default modifier</token>
  </line>
  <line no="89">
    <token name="T_INLINE_HTML">     * @method Fluent first() Select first row</token>
  </line>
  <line no="90">
    <token name="T_INLINE_HTML">     * @method Fluent index(string $name = null) Add the in dex clause</token>
  </line>
  <line no="91">
    <token name="T_INLINE_HTML">     * @method Fluent on(string $table) `on` of a foreign key</token>
  </line>
  <line no="92">
    <token name="T_INLINE_HTML">     * @method Fluent onDelete(string $action) `on delete` of a foreign key</token>
  </line>
  <line no="93">
    <token name="T_INLINE_HTML">     * @method Fluent onUpdate(string $action) `on update` of a foreign key</token>
  </line>
  <line no="94">
    <token name="T_INLINE_HTML">     * @method Fluent primary() Add the primary key modifier</token>
  </line>
  <line no="95">
    <token name="T_INLINE_HTML">     * @method Fluent references(string $column) `references` of a foreign key</token>
  </line>
  <line no="96">
    <token name="T_INLINE_HTML">     * @method Fluent nullable(bool $value = true) Add the nullable modifier</token>
  </line>
  <line no="97">
    <token name="T_INLINE_HTML">     * @method Fluent unique(string $name = null) Add unique index clause</token>
  </line>
  <line no="98">
    <token name="T_INLINE_HTML">     * @method Fluent unsigned() Add the unsigned modifier</token>
  </line>
  <line no="99">
    <token name="T_INLINE_HTML">     * @method Fluent useCurrent() Add the default timestamp value</token>
  </line>
  <line no="100">
    <token name="T_INLINE_HTML">     * @method Fluent change() Add the change modifier</token>
  </line>
  <line no="101">
    <token name="T_INLINE_HTML">     */</token>
  </line>
  <line no="102">
    <token name="T_INLINE_HTML">    class Fluent {}</token>
  </line>
  <line no="103">
    <token name="T_INLINE_HTML">}</token>
  </line>
  <line no="104">
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ENDIF">endif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="105"/>
  <line no="106">
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$factories</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$factory</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="107">
    <token name="T_INLINE_HTML">namespace </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_VARIABLE">$factory</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getNamespaceName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> {</token>
  </line>
  <line no="108">
    <token name="T_INLINE_HTML">    /**</token>
  </line>
  <line no="109">
    <token name="T_INLINE_HTML">    * @method \Illuminate\Database\Eloquent\Collection|</token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_VARIABLE">$factory</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getShortName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML">[]|</token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_VARIABLE">$factory</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getShortName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> create($attributes = [])</token>
  </line>
  <line no="110">
    <token name="T_INLINE_HTML">    * @method \Illuminate\Database\Eloquent\Collection|</token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_VARIABLE">$factory</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getShortName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML">[]|</token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_VARIABLE">$factory</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getShortName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML"> make($attributes = [])</token>
  </line>
  <line no="111">
    <token name="T_INLINE_HTML">    */</token>
  </line>
  <line no="112">
    <token name="T_INLINE_HTML">    class </token>
    <token name="T_OPEN_TAG_WITH_ECHO">&lt;?=</token>
    <token name="T_VARIABLE">$factory</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getShortName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML">FactoryBuilder extends \Illuminate\Database\Eloquent\FactoryBuilder {}</token>
  </line>
  <line no="113">
    <token name="T_INLINE_HTML">}</token>
  </line>
  <line no="114">
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ENDFOREACH">endforeach</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="115"/>
</source>
