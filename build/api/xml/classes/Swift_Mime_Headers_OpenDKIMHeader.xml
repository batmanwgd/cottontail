<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Swift_Mime_Headers_OpenDKIMHeader" namespace="" name="Swift_Mime_Headers_OpenDKIMHeader" abstract="false" final="false" start="18" end="135">
  <file path="/Users/nyuszi/_Development/_Keycloak/_Showcase/_roboto/cottontail/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mime/Headers" file="OpenDKIMHeader.php" realpath="/Users/nyuszi/_Development/_Keycloak/_Showcase/_roboto/cottontail/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mime/Headers/OpenDKIMHeader.php" size="2584" time="2021-03-09T12:30:35+00:00" unixtime="1615293035" sha1="cb7a0ed85ce3f37cbfb77b78e5c9115f6a1a8711" relative="vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mime/Headers/OpenDKIMHeader.php"/>
  <docblock>
    <description compact="An OpenDKIM Specific Header using only raw header datas without encoding."/>
    <author value="De Cock Xavier &lt;xdecock@gmail.com&gt;"/>
    <deprecated value="since SwiftMailer 6.1.0; use Swift_Signers_DKIMSigner instead."/>
  </docblock>
  <implements full="Swift_Mime_Header" namespace="" name="Swift_Mime_Header"/>
  <member name="value" visibility="private" static="false" line="25">
    <docblock>
      <description compact="The value of this Header."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="fieldName" visibility="private" static="false" line="32">
    <docblock>
      <description compact="The name of this Header."/>
      <var type="string"/>
    </docblock>
  </member>
  <constructor name="__construct" start="37" end="40" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="string" variable="$name"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </constructor>
  <method name="getFieldType" start="50" end="53" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the type of Header that this instance represents."/>
      <see value="TYPE_TEXT, TYPE_PARAMETERIZED, TYPE_MAILBOX"/>
      <see value="TYPE_DATE, TYPE_ID, TYPE_PATH"/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="setFieldBodyModel" start="62" end="65" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the model for the field body.">This method takes a string for the field value.</description>
      <param type="string" variable="$model"/>
    </docblock>
    <parameter name="model" byreference="false" type="{unknown}"/>
  </method>
  <method name="getFieldBodyModel" start="74" end="77" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the model for the field body.">This method returns a string.</description>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getValue" start="84" end="87" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the (unencoded) value of this header."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="setValue" start="94" end="97" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the (unencoded) value of this header."/>
      <param type="string" variable="$value"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="getFieldBody" start="104" end="107" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the value of this header prepared for rendering."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="toString" start="114" end="117" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get this Header rendered as a RFC 2822 compliant string."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getFieldName" start="124" end="127" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the Header FieldName."/>
      <see value="Swift_Mime_Header::getFieldName()"/>
    </docblock>
  </method>
  <method name="setCharset" start="132" end="134" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Ignored."/>
    </docblock>
    <parameter name="charset" byreference="false" type="{unknown}"/>
  </method>
  <interface full="Swift_Mime_Header" namespace="" name="Swift_Mime_Header">
    <constant type="{unknown}" name="TYPE_TEXT" value="2">
      <docblock>
        <description compact="Text headers"/>
      </docblock>
    </constant>
    <constant type="{unknown}" name="TYPE_PARAMETERIZED" value="6">
      <docblock>
        <description compact="headers (text + params)"/>
      </docblock>
    </constant>
    <constant type="{unknown}" name="TYPE_MAILBOX" value="8">
      <docblock>
        <description compact="Mailbox and address headers"/>
      </docblock>
    </constant>
    <constant type="{unknown}" name="TYPE_DATE" value="16">
      <docblock>
        <description compact="Date and time headers"/>
      </docblock>
    </constant>
    <constant type="{unknown}" name="TYPE_ID" value="32">
      <docblock>
        <description compact="Identification headers"/>
      </docblock>
    </constant>
    <constant type="{unknown}" name="TYPE_PATH" value="64">
      <docblock>
        <description compact="Address path headers"/>
      </docblock>
    </constant>
    <method name="getFieldType" start="44" end="44" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the type of Header that this instance represents."/>
        <see value="TYPE_TEXT, TYPE_PARAMETERIZED, TYPE_MAILBOX"/>
        <see value="TYPE_DATE, TYPE_ID, TYPE_PATH"/>
        <return type="int"/>
      </docblock>
    </method>
    <method name="setFieldBodyModel" start="53" end="53" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set the model for the field body.">The actual types needed will vary depending upon the type of Header.</description>
        <param type="mixed" variable="$model"/>
      </docblock>
      <parameter name="model" byreference="false" type="{unknown}"/>
    </method>
    <method name="setCharset" start="60" end="60" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set the charset used when rendering the Header."/>
        <param type="string" variable="$charset"/>
      </docblock>
      <parameter name="charset" byreference="false" type="{unknown}"/>
    </method>
    <method name="getFieldBodyModel" start="69" end="69" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the model for the field body.">The return type depends on the specifics of the Header.</description>
        <return type="mixed"/>
      </docblock>
    </method>
    <method name="getFieldName" start="78" end="78" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the name of this header (e.g. Subject).">The name is an identifier and as such will be immutable.</description>
        <return type="string"/>
      </docblock>
    </method>
    <method name="getFieldBody" start="85" end="85" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the field body, prepared for folding into a final header value."/>
        <return type="string"/>
      </docblock>
    </method>
    <method name="toString" start="92" end="92" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get this Header rendered as a compliant string, including trailing CRLF."/>
        <return type="string"/>
      </docblock>
    </method>
  </interface>
</class>
