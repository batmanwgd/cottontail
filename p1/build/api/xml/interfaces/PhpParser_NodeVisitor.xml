<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="PhpParser\NodeVisitor" namespace="PhpParser" name="NodeVisitor" abstract="false" final="false" start="5" end="72">
  <file path="/Users/nyuszi/_Development/_Keycloak/_Showcase/_roboto/cottontail/vendor/nikic/php-parser/lib/PhpParser" file="NodeVisitor.php" realpath="/Users/nyuszi/_Development/_Keycloak/_Showcase/_roboto/cottontail/vendor/nikic/php-parser/lib/PhpParser/NodeVisitor.php" size="2026" time="2021-05-03T19:11:20+00:00" unixtime="1620069080" sha1="b782c1e97ea25428280bc69d33d4c0121adce982" relative="vendor/nikic/php-parser/lib/PhpParser/NodeVisitor.php"/>
  <method name="beforeTraverse" start="18" end="18" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Called once before traversal.">Return value semantics:
 * null:      $nodes stays as-is
 * otherwise: $nodes is set to the return value</description>
      <param description="Array of nodes" type="array" variable="$nodes" of="object">
        <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
      </param>
      <return description="Array of nodes" type="array" of="object">
        <type full="PhpParser\null|Node" namespace="PhpParser" name="null|Node"/>
      </return>
    </docblock>
    <parameter name="nodes" byreference="false" type="array"/>
  </method>
  <method name="enterNode" start="37" end="37" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Called when entering a node.">Return value semantics:
 * null
       =&gt; $node stays as-is
 * NodeTraverser::DONT_TRAVERSE_CHILDREN
       =&gt; Children of $node are not traversed. $node stays as-is
 * NodeTraverser::STOP_TRAVERSAL
       =&gt; Traversal is aborted. $node stays as-is
 * otherwise
       =&gt; $node is set to the return value</description>
      <param description="Node" type="object" variable="$node">
        <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
      </param>
      <return description="Replacement node (or special return value)" type="object">
        <type full="PhpParser\null|int|Node" namespace="PhpParser" name="null|int|Node"/>
      </return>
    </docblock>
    <parameter name="node" byreference="false" type="object">
      <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
    </parameter>
  </method>
  <method name="leaveNode" start="58" end="58" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Called when leaving a node.">Return value semantics:
 * null
       =&gt; $node stays as-is
 * NodeTraverser::REMOVE_NODE
       =&gt; $node is removed from the parent array
 * NodeTraverser::STOP_TRAVERSAL
       =&gt; Traversal is aborted. $node stays as-is
 * array (of Nodes)
       =&gt; The return value is merged into the parent array (at the position of the $node)
 * otherwise
       =&gt; $node is set to the return value</description>
      <param description="Node" type="object" variable="$node">
        <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
      </param>
      <return description="Replacement node (or special return value)" type="array" of="object">
        <type full="PhpParser\null|int|Node|Node" namespace="PhpParser" name="null|int|Node|Node"/>
      </return>
    </docblock>
    <parameter name="node" byreference="false" type="object">
      <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
    </parameter>
  </method>
  <method name="afterTraverse" start="71" end="71" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Called once after traversal.">Return value semantics:
 * null:      $nodes stays as-is
 * otherwise: $nodes is set to the return value</description>
      <param description="Array of nodes" type="array" variable="$nodes" of="object">
        <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
      </param>
      <return description="Array of nodes" type="array" of="object">
        <type full="PhpParser\null|Node" namespace="PhpParser" name="null|Node"/>
      </return>
    </docblock>
    <parameter name="nodes" byreference="false" type="array"/>
  </method>
  <implementors>
    <class full="PhpParser\NodeVisitorAbstract" namespace="PhpParser" name="NodeVisitorAbstract"/>
  </implementors>
</interface>
