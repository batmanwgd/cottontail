<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/Users/nyuszi/_Development/_Keycloak/_Showcase/_roboto/cottontail/vendor/nikic/php-parser/lib/PhpParser" file="NodeVisitor.php" realpath="/Users/nyuszi/_Development/_Keycloak/_Showcase/_roboto/cottontail/vendor/nikic/php-parser/lib/PhpParser/NodeVisitor.php" size="2026" time="2021-05-03T19:11:20+00:00" unixtime="1620069080" sha1="b782c1e97ea25428280bc69d33d4c0121adce982" relative="vendor/nikic/php-parser/lib/PhpParser/NodeVisitor.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_DECLARE">declare</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">strict_types</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpParser</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4"/>
  <line no="5">
    <token name="T_INTERFACE">interface</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">NodeVisitor</token>
  </line>
  <line no="6">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="7">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT">     * Called once before traversal.</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT">     * Return value semantics:</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT">     *  * null:      $nodes stays as-is</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT">     *  * otherwise: $nodes is set to the return value</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT">     * @param Node[] $nodes Array of nodes</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT">     * @return null|Node[] Array of nodes</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="18">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">beforeTraverse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$nodes</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="19"/>
  <line no="20">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT">     * Called when entering a node.</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT">     * Return value semantics:</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT">     *  * null</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT">     *        =&gt; $node stays as-is</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT">     *  * NodeTraverser::DONT_TRAVERSE_CHILDREN</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT">     *        =&gt; Children of $node are not traversed. $node stays as-is</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT">     *  * NodeTraverser::STOP_TRAVERSAL</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT">     *        =&gt; Traversal is aborted. $node stays as-is</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">     *  * otherwise</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT">     *        =&gt; $node is set to the return value</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="33">
    <token name="T_DOC_COMMENT">     * @param Node $node Node</token>
  </line>
  <line no="34">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT">     * @return null|int|Node Replacement node (or special return value)</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="37">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">enterNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Node</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="38"/>
  <line no="39">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT">     * Called when leaving a node.</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT">     * Return value semantics:</token>
  </line>
  <line no="43">
    <token name="T_DOC_COMMENT">     *  * null</token>
  </line>
  <line no="44">
    <token name="T_DOC_COMMENT">     *        =&gt; $node stays as-is</token>
  </line>
  <line no="45">
    <token name="T_DOC_COMMENT">     *  * NodeTraverser::REMOVE_NODE</token>
  </line>
  <line no="46">
    <token name="T_DOC_COMMENT">     *        =&gt; $node is removed from the parent array</token>
  </line>
  <line no="47">
    <token name="T_DOC_COMMENT">     *  * NodeTraverser::STOP_TRAVERSAL</token>
  </line>
  <line no="48">
    <token name="T_DOC_COMMENT">     *        =&gt; Traversal is aborted. $node stays as-is</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT">     *  * array (of Nodes)</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT">     *        =&gt; The return value is merged into the parent array (at the position of the $node)</token>
  </line>
  <line no="51">
    <token name="T_DOC_COMMENT">     *  * otherwise</token>
  </line>
  <line no="52">
    <token name="T_DOC_COMMENT">     *        =&gt; $node is set to the return value</token>
  </line>
  <line no="53">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="54">
    <token name="T_DOC_COMMENT">     * @param Node $node Node</token>
  </line>
  <line no="55">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="56">
    <token name="T_DOC_COMMENT">     * @return null|int|Node|Node[] Replacement node (or special return value)</token>
  </line>
  <line no="57">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="58">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">leaveNode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Node</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="59"/>
  <line no="60">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="61">
    <token name="T_DOC_COMMENT">     * Called once after traversal.</token>
  </line>
  <line no="62">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="63">
    <token name="T_DOC_COMMENT">     * Return value semantics:</token>
  </line>
  <line no="64">
    <token name="T_DOC_COMMENT">     *  * null:      $nodes stays as-is</token>
  </line>
  <line no="65">
    <token name="T_DOC_COMMENT">     *  * otherwise: $nodes is set to the return value</token>
  </line>
  <line no="66">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="67">
    <token name="T_DOC_COMMENT">     * @param Node[] $nodes Array of nodes</token>
  </line>
  <line no="68">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="69">
    <token name="T_DOC_COMMENT">     * @return null|Node[] Array of nodes</token>
  </line>
  <line no="70">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="71">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">afterTraverse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$nodes</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="72">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="73"/>
</source>
