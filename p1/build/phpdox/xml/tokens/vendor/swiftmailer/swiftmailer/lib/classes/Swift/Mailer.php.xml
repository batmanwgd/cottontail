<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/Users/nyuszi/_Development/_Keycloak/_Showcase/_roboto/cottontail/vendor/swiftmailer/swiftmailer/lib/classes/Swift" file="Mailer.php" realpath="/Users/nyuszi/_Development/_Keycloak/_Showcase/_roboto/cottontail/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mailer.php" size="2566" time="2021-03-09T12:30:35+00:00" unixtime="1615293035" sha1="9b8cbd9fcaff89d2162f45bc40ce976e2b703ecd" relative="vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mailer.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="4">
    <token name="T_COMMENT"> * This file is part of SwiftMailer.</token>
  </line>
  <line no="5">
    <token name="T_COMMENT"> * (c) 2004-2009 Chris Corbyn</token>
  </line>
  <line no="6">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="7">
    <token name="T_COMMENT"> * For the full copyright and license information, please view the LICENSE</token>
  </line>
  <line no="8">
    <token name="T_COMMENT"> * file that was distributed with this source code.</token>
  </line>
  <line no="9">
    <token name="T_COMMENT"> */</token>
  </line>
  <line no="10"/>
  <line no="11">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> * Swift Mailer class.</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT"> * @author Chris Corbyn</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="16">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Swift_Mailer</token>
  </line>
  <line no="17">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="18">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/** The Transport used to send messages */</token>
  </line>
  <line no="19">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$transport</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="20"/>
  <line no="21">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT">     * Create a new Mailer using $transport for delivery.</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="24">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">__construct</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Swift_Transport</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$transport</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="25">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="26">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">transport</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$transport</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="27">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="28"/>
  <line no="29">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">     * Create a new class instance of one of the message services.</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">     * For example 'mimepart' would create a 'message.mimepart' instance</token>
  </line>
  <line no="33">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="34">
    <token name="T_DOC_COMMENT">     * @param string $service</token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT">     * @return object</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="38">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">createMessage</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$service</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="39">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="40">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Swift_DependencyContainer</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getInstance</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="41">
    <token name="T_WHITESPACE">            </token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">lookup</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'message.'</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$service</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="42">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="43"/>
  <line no="44">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="45">
    <token name="T_DOC_COMMENT">     * Send the given Message like it would be sent in a mail client.</token>
  </line>
  <line no="46">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="47">
    <token name="T_DOC_COMMENT">     * All recipients (with the exception of Bcc) will be able to see the other</token>
  </line>
  <line no="48">
    <token name="T_DOC_COMMENT">     * recipients this message was sent to.</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT">     * Recipient/sender data will be retrieved from the Message object.</token>
  </line>
  <line no="51">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="52">
    <token name="T_DOC_COMMENT">     * The return value is the number of recipients who were accepted for</token>
  </line>
  <line no="53">
    <token name="T_DOC_COMMENT">     * delivery.</token>
  </line>
  <line no="54">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="55">
    <token name="T_DOC_COMMENT">     * @param array $failedRecipients An array of failures by-reference</token>
  </line>
  <line no="56">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="57">
    <token name="T_DOC_COMMENT">     * @return int The number of successful recipients. Can be 0 which indicates failure</token>
  </line>
  <line no="58">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">send</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Swift_Mime_SimpleMessage</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$failedRecipients</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="60">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="61">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$failedRecipients</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY_CAST">(array)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$failedRecipients</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="62"/>
  <line no="63">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// FIXME: to be removed in 7.0 (as transport must now start itself on send)</token>
  </line>
  <line no="64">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">transport</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isStarted</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="65">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">transport</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">start</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="66">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="67"/>
  <line no="68">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$sent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="69"/>
  <line no="70">
    <token name="T_WHITESPACE">        </token>
    <token name="T_TRY">try</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="71">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$sent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">transport</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">send</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$failedRecipients</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="72">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CATCH">catch</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Swift_RfcComplianceException</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$e</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="73">
    <token name="T_WHITESPACE">            </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getTo</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$address</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="74">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$failedRecipients</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$address</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="75">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="76">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="77"/>
  <line no="78">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$sent</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="79">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="80"/>
  <line no="81">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="82">
    <token name="T_DOC_COMMENT">     * Register a plugin using a known unique key (e.g. myPlugin).</token>
  </line>
  <line no="83">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="84">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">registerPlugin</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Swift_Events_EventListener</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$plugin</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="85">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="86">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">transport</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">registerPlugin</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$plugin</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="87">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="88"/>
  <line no="89">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="90">
    <token name="T_DOC_COMMENT">     * The Transport used to send messages.</token>
  </line>
  <line no="91">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="92">
    <token name="T_DOC_COMMENT">     * @return Swift_Transport</token>
  </line>
  <line no="93">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="94">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getTransport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="95">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="96">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">transport</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="97">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="98">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="99"/>
</source>
